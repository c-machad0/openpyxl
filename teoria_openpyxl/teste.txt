Principais funÃ§Ãµes do openpyxl

Lendo arquivos excel:
load_workbook('[nome do arquivo]') -> carrega um arquivo xlsx
Ex: workbook = openpyxl.load_workbook('estoque.xlsx') ou
workbook = Workbook() -> para instanciar uma classe e em seguida
workbook = load_workbook('estoque') -> chamando diretamente apÃ³s a classe ser instanciada

workbook.active -> para obter uma aba da planilha ativa ou
ws = workbook['estoque 1'] -> para fazer referÃªncia a aba da planilha que deseja. funciona da
mesma forma que com a funÃ§Ã£o 'active'

max_row -> faz referÃªncia ao numero de linhas de uma planilha
max_column -> faz referÃªncia ao numero de colunas de uma planilha

ws['A1].value -> para obter o valor de uma cÃ©lula especÃ­fica

Escrever em arquivos excel:
ws['A1'] = 'exemplo' -> para escrever de forma hard code em uma determinada cÃ©lula da planilha
ws.cell(row=1, column=11, value = 'valor do estoque') -> para escever em uma cÃ©lula, usando a funÃ§Ã£o cell

workbook.save('estoque.xlsx')

ws.delete_rows('[numero da linha que deseja excluir], [qtd de linhas que devem ser excluidar]')

Criando formulas em excel:
ws['P1'] = 'Media do estoque' -> criando a coluna com o nome
ws['P2'] = '=AVERAGE(K2:K9)' -> Pegando a mÃ©dia de todos os valores da coluna K e jogando na linha ['P2']

ws['Q1'] = 'Numero de registros' -> criando a coluna com o nome
ws['Q2'] = '=COUNTA(E2:E9) -> conta a quantidade de registros dentro desse intervalo na coluna 'E'


Trabalhando com planilhas:
ws.title = 'Novo titulo' -> para alterar nome da planilha

workbook.sheetnames -> para saber todas as abas da planilha

workbook.create_sheet('Nova aba') -> para criar nova aba

workbook.remove(workbook['Nova aba']) -> para excluir alguma aba

workbook.copy_worksheet(workbook['estoque']) -> para copiar uma das abas da planilha
workbook.save('novo_estoque.xlsx') -> para salvar em outro arquivo 'xlsx'

cell.coordinate retorna o endereÃ§o da cÃ©lula (A1, B2, C3, etc.)

iter_rows() retorna uma tupla onde cada Ã­ndice representa a coluna dentro do intervalo definido.
O primeiro elemento (row[0]) sempre representa a primeira coluna do intervalo (min_col).
Se min_col=1, max_col=2, entÃ£o:
row[0] â†’ Coluna 1 (A)
row[1] â†’ Coluna 2 (B)

iter_rows()	-> Linha a linha (horizontal) -> Uma tupla com todas as cÃ©lulas da linha -> Processar registros linha a linha (ex.: vendas, cadastros, transaÃ§Ãµes)
iter_cols()	-> Coluna a coluna (vertical) -> Uma tupla com todas as cÃ©lulas da coluna -> Processar dados por categoria (ex.: calcular mÃ©dias de cada coluna)
Se vocÃª quer percorrer todos os produtos de uma tabela, geralmente usa iter_rows().
Se vocÃª quer verificar as estatÃ­sticas de uma Ãºnica coluna, usa iter_cols().

ğŸš€ Resumo:

iter_rows() â†’ Foca na leitura de registros individuais (ex.: cada linha = um pedido).
iter_cols() â†’ Foca na leitura de categorias de dados (ex.: toda uma coluna de preÃ§os).

Quando usar Reference?
Criar grÃ¡ficos	Para selecionar dados numÃ©ricos e rÃ³tulos.
Resumir valores	Para pegar um intervalo de cÃ©lulas e calcular soma/mÃ©dia.
Consolidar dados	Para selecionar valores especÃ­ficos e escrever em outra aba.